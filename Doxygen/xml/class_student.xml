<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_student" kind="class" language="C++" prot="public">
    <compoundname>Student</compoundname>
    <includes refid="_student_8h" local="no">Student.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_student_1a3b4d80b9501c9969074409069518188e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Student::identifier</definition>
        <argsstring></argsstring>
        <name>identifier</name>
        <qualifiedname>Student::identifier</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="13" column="9" bodyfile="Student.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_student_1ad5e0ac0a8bd71e53ebb597debac0619b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Student::firstName</definition>
        <argsstring></argsstring>
        <name>firstName</name>
        <qualifiedname>Student::firstName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="14" column="17" bodyfile="Student.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_student_1a6e7991bf0505ba924cdd500e10b43fc2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Student::lastName</definition>
        <argsstring></argsstring>
        <name>lastName</name>
        <qualifiedname>Student::lastName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="15" column="17" bodyfile="Student.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_student_1a9ff5172e74549cbb65178151f81b76fb" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Student::address</definition>
        <argsstring></argsstring>
        <name>address</name>
        <qualifiedname>Student::address</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="16" column="17" bodyfile="Student.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_student_1a953614c83b9731790f9caad1e1ac9f1d" prot="private" static="no" mutable="no">
        <type><ref refid="class_date" kindref="compound">Date</ref></type>
        <definition>Date Student::enrollmentDate</definition>
        <argsstring></argsstring>
        <name>enrollmentDate</name>
        <qualifiedname>Student::enrollmentDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="17" column="10" bodyfile="Student.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_student_1acc563e7ae8566e22be21243d87a014fb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Student::creditHoursCompleted</definition>
        <argsstring></argsstring>
        <name>creditHoursCompleted</name>
        <qualifiedname>Student::creditHoursCompleted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="18" column="9" bodyfile="Student.h" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_student_1a95538a8aaa348c49e524704809a7bc24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Student::Student</definition>
        <argsstring>(int id=0, const std::string &amp;first=&quot;&quot;, const std::string &amp;last=&quot;&quot;, const std::string &amp;addr=&quot;&quot;, const Date &amp;date=Date(), int credits=0)</argsstring>
        <name>Student</name>
        <qualifiedname>Student::Student</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>first</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>last</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>addr</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const <ref refid="class_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
          <defval><ref refid="class_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>int</type>
          <declname>credits</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="class_student" kindref="compound">Student</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes a new <ref refid="class_student" kindref="compound">Student</ref> object with optional parameters for the student&apos;s details If no arguments are provided, default values are used</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The student&apos;s unique id number. Default is 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>The student&apos;s first name. Default is an empty string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>The student&apos;s last name. Default is an empty string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The student&apos;s address. Default is an empty string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>The student&apos;s birthday. Default is a default-constructed <ref refid="class_date" kindref="compound">Date</ref> object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>credits</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of credits the student has earned. Default is 0</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This constructor initializes a <ref refid="class_student" kindref="compound">Student</ref> object with the specified attributes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The student id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>The first name of the student </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>The last name of the student </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the student </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>The enrollment date of the student (a <ref refid="class_date" kindref="compound">Date</ref> object) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>credits</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of credit hours completed by the student </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="34" column="5" bodyfile="Student.cpp" bodystart="19" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1abb660148aeb2ace6a9a6cc1593b0b546" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Student::getIdentifier</definition>
        <argsstring>() const</argsstring>
        <name>getIdentifier</name>
        <qualifiedname>Student::getIdentifier</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="38" column="9" bodyfile="Student.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1ab596171c655a0c5a8682e78c3db39c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Student::setIdentifier</definition>
        <argsstring>(int id)</argsstring>
        <name>setIdentifier</name>
        <qualifiedname>Student::setIdentifier</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="39" column="10" bodyfile="Student.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1aabc22298e32cdd47976bd3d3c5033df6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Student::getFirstName</definition>
        <argsstring>() const</argsstring>
        <name>getFirstName</name>
        <qualifiedname>Student::getFirstName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="40" column="23" bodyfile="Student.cpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1a8cb9cb6c04af847a54ff8bd0ca029bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Student::setFirstName</definition>
        <argsstring>(const std::string &amp;first)</argsstring>
        <name>setFirstName</name>
        <qualifiedname>Student::setFirstName</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="41" column="10" bodyfile="Student.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1a1e555d9d92cbf5ee319b55771c9891b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Student::getLastName</definition>
        <argsstring>() const</argsstring>
        <name>getLastName</name>
        <qualifiedname>Student::getLastName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="42" column="23" bodyfile="Student.cpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1ae72d860cb6458d873ea7291343fc8a0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Student::setLastName</definition>
        <argsstring>(const std::string &amp;last)</argsstring>
        <name>setLastName</name>
        <qualifiedname>Student::setLastName</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="43" column="10" bodyfile="Student.cpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1a606f1a860663f393919b1c21081ceaab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Student::getAddress</definition>
        <argsstring>() const</argsstring>
        <name>getAddress</name>
        <qualifiedname>Student::getAddress</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="44" column="23" bodyfile="Student.cpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1a70817fabd60719e6124e88dfb0665206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Student::setAddress</definition>
        <argsstring>(const std::string &amp;addr)</argsstring>
        <name>setAddress</name>
        <qualifiedname>Student::setAddress</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="45" column="10" bodyfile="Student.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1ad3e890f86fdebcd176ff614ad9aeccb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; Student::getEnrollmentDate</definition>
        <argsstring>() const</argsstring>
        <name>getEnrollmentDate</name>
        <qualifiedname>Student::getEnrollmentDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="46" column="16" bodyfile="Student.cpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1aa79e70e71dafab8f16d60276e1570a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Student::setEnrollmentDate</definition>
        <argsstring>(const Date &amp;date)</argsstring>
        <name>setEnrollmentDate</name>
        <qualifiedname>Student::setEnrollmentDate</qualifiedname>
        <param>
          <type>const <ref refid="class_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="47" column="10" bodyfile="Student.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1ac817a52dd5dc052c4ac09b7b90a65879" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Student::getCreditHoursCompleted</definition>
        <argsstring>() const</argsstring>
        <name>getCreditHoursCompleted</name>
        <qualifiedname>Student::getCreditHoursCompleted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="48" column="9" bodyfile="Student.cpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_student_1aa4070540a472d479786ffbe4d8581e48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Student::setCreditHoursCompleted</definition>
        <argsstring>(int credits)</argsstring>
        <name>setCreditHoursCompleted</name>
        <qualifiedname>Student::setCreditHoursCompleted</qualifiedname>
        <param>
          <type>int</type>
          <declname>credits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="49" column="10" bodyfile="Student.cpp" bodystart="73" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_student_1a346086824d08147b8544ca5403748e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;in, Student &amp;student)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>Student::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="class_student" kindref="compound">Student</ref> &amp;</type>
          <declname>student</declname>
        </param>
        <briefdescription>
<para>Input stream extraction operator for <ref refid="class_student" kindref="compound">Student</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>input a <ref refid="class_student" kindref="compound">Student</ref> object from an input stream by prompting the user to enter attributes of the student</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The input stream to read from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>student</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_student" kindref="compound">Student</ref> object to populate with input values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The input stream (in) after reading the <ref refid="class_student" kindref="compound">Student</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="52" column="25" bodyfile="Student.cpp" bodystart="89" bodyend="110"/>
      </memberdef>
      <memberdef kind="friend" id="class_student_1aadd1864a776093e95f449dc91906f9eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Student &amp;student)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>Student::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="class_student" kindref="compound">Student</ref> &amp;</type>
          <declname>student</declname>
        </param>
        <briefdescription>
<para>Output stream insertion operator for <ref refid="class_student" kindref="compound">Student</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>output a <ref refid="class_student" kindref="compound">Student</ref> object to an output stream by printing attributes of the student</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream to write to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>student</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_student" kindref="compound">Student</ref> object to output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output stream (out) after writing the <ref refid="class_student" kindref="compound">Student</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Student.h" line="53" column="12" bodyfile="Student.cpp" bodystart="123" bodyend="131"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Student.h" line="11" column="1" bodyfile="Student.h" bodystart="11" bodyend="54"/>
    <listofallmembers>
      <member refid="class_student_1a9ff5172e74549cbb65178151f81b76fb" prot="private" virt="non-virtual"><scope>Student</scope><name>address</name></member>
      <member refid="class_student_1acc563e7ae8566e22be21243d87a014fb" prot="private" virt="non-virtual"><scope>Student</scope><name>creditHoursCompleted</name></member>
      <member refid="class_student_1a953614c83b9731790f9caad1e1ac9f1d" prot="private" virt="non-virtual"><scope>Student</scope><name>enrollmentDate</name></member>
      <member refid="class_student_1ad5e0ac0a8bd71e53ebb597debac0619b" prot="private" virt="non-virtual"><scope>Student</scope><name>firstName</name></member>
      <member refid="class_student_1a606f1a860663f393919b1c21081ceaab" prot="public" virt="non-virtual"><scope>Student</scope><name>getAddress</name></member>
      <member refid="class_student_1ac817a52dd5dc052c4ac09b7b90a65879" prot="public" virt="non-virtual"><scope>Student</scope><name>getCreditHoursCompleted</name></member>
      <member refid="class_student_1ad3e890f86fdebcd176ff614ad9aeccb1" prot="public" virt="non-virtual"><scope>Student</scope><name>getEnrollmentDate</name></member>
      <member refid="class_student_1aabc22298e32cdd47976bd3d3c5033df6" prot="public" virt="non-virtual"><scope>Student</scope><name>getFirstName</name></member>
      <member refid="class_student_1abb660148aeb2ace6a9a6cc1593b0b546" prot="public" virt="non-virtual"><scope>Student</scope><name>getIdentifier</name></member>
      <member refid="class_student_1a1e555d9d92cbf5ee319b55771c9891b9" prot="public" virt="non-virtual"><scope>Student</scope><name>getLastName</name></member>
      <member refid="class_student_1a3b4d80b9501c9969074409069518188e" prot="private" virt="non-virtual"><scope>Student</scope><name>identifier</name></member>
      <member refid="class_student_1a6e7991bf0505ba924cdd500e10b43fc2" prot="private" virt="non-virtual"><scope>Student</scope><name>lastName</name></member>
      <member refid="class_student_1aadd1864a776093e95f449dc91906f9eb" prot="public" virt="non-virtual"><scope>Student</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_student_1a346086824d08147b8544ca5403748e5d" prot="public" virt="non-virtual"><scope>Student</scope><name>operator&gt;&gt;</name></member>
      <member refid="class_student_1a70817fabd60719e6124e88dfb0665206" prot="public" virt="non-virtual"><scope>Student</scope><name>setAddress</name></member>
      <member refid="class_student_1aa4070540a472d479786ffbe4d8581e48" prot="public" virt="non-virtual"><scope>Student</scope><name>setCreditHoursCompleted</name></member>
      <member refid="class_student_1aa79e70e71dafab8f16d60276e1570a9f" prot="public" virt="non-virtual"><scope>Student</scope><name>setEnrollmentDate</name></member>
      <member refid="class_student_1a8cb9cb6c04af847a54ff8bd0ca029bb9" prot="public" virt="non-virtual"><scope>Student</scope><name>setFirstName</name></member>
      <member refid="class_student_1ab596171c655a0c5a8682e78c3db39c52" prot="public" virt="non-virtual"><scope>Student</scope><name>setIdentifier</name></member>
      <member refid="class_student_1ae72d860cb6458d873ea7291343fc8a0a" prot="public" virt="non-virtual"><scope>Student</scope><name>setLastName</name></member>
      <member refid="class_student_1a95538a8aaa348c49e524704809a7bc24" prot="public" virt="non-virtual"><scope>Student</scope><name>Student</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
