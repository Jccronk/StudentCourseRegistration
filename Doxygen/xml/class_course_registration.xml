<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_course_registration" kind="class" language="C++" prot="public">
    <compoundname>CourseRegistration</compoundname>
    <includes refid="_course_registration_8h" local="no">CourseRegistration.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_course_registration_1af69a665d7d1e3a896ec2986c8e288a66" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CourseRegistration::courseIdentifier</definition>
        <argsstring></argsstring>
        <name>courseIdentifier</name>
        <qualifiedname>CourseRegistration::courseIdentifier</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CourseRegistration.cpp" line="13" column="17" bodyfile="CourseRegistration.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_course_registration_1ab8455278c9cc0783893a3bce2a8fd655" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CourseRegistration::studentIdentifier</definition>
        <argsstring></argsstring>
        <name>studentIdentifier</name>
        <qualifiedname>CourseRegistration::studentIdentifier</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CourseRegistration.cpp" line="14" column="17" bodyfile="CourseRegistration.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_course_registration_1acd29cb48054fc1035659af67a3a445b6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CourseRegistration::numberOfCreditHours</definition>
        <argsstring></argsstring>
        <name>numberOfCreditHours</name>
        <qualifiedname>CourseRegistration::numberOfCreditHours</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CourseRegistration.cpp" line="15" column="9" bodyfile="CourseRegistration.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_course_registration_1afc23eb1591c214bc15d8a6ebbabb663b" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char CourseRegistration::courseGrade</definition>
        <argsstring></argsstring>
        <name>courseGrade</name>
        <qualifiedname>CourseRegistration::courseGrade</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CourseRegistration.cpp" line="16" column="10" bodyfile="CourseRegistration.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_course_registration_1ad02cda6ae6cba23ef881bed7241484b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CourseRegistration::CourseRegistration</definition>
        <argsstring>(const std::string &amp;courseID=&quot;&quot;, const std::string &amp;studentID=&quot;&quot;, int creditHours=0, char grade=&apos; &apos;)</argsstring>
        <name>CourseRegistration</name>
        <qualifiedname>CourseRegistration::CourseRegistration</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>courseID</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>studentID</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>creditHours</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>char</type>
          <declname>grade</declname>
          <defval>&apos; &apos;</defval>
        </param>
        <briefdescription>
<para>Default Constructor for the <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>courseID</parametername>
</parameternamelist>
<parameterdescription>
<para>course identifier (default is an empty string) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>studentID</parametername>
</parameternamelist>
<parameterdescription>
<para>student identifier (default is an empty string) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>creditHours</parametername>
</parameternamelist>
<parameterdescription>
<para>number of credit hours (default is 0) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grade</parametername>
</parameternamelist>
<parameterdescription>
<para>course grade (default is a space character) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CourseRegistration.cpp" line="26" column="5" bodyfile="CourseRegistration.cpp" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_course_registration_1ad02cda6ae6cba23ef881bed7241484b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CourseRegistration::CourseRegistration</definition>
        <argsstring>(const std::string &amp;courseID=&quot;&quot;, const std::string &amp;studentID=&quot;&quot;, int creditHours=0, char grade=&apos; &apos;)</argsstring>
        <name>CourseRegistration</name>
        <qualifiedname>CourseRegistration::CourseRegistration</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>courseID</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>studentID</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>creditHours</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>char</type>
          <declname>grade</declname>
          <defval>&apos; &apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CourseRegistration.h" line="26" column="5"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_course_registration_1ae855faebf1c97a76db0a892fb7c5ff8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;input, CourseRegistration &amp;courseReg)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CourseRegistration::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> &amp;</type>
          <declname>courseReg</declname>
        </param>
        <briefdescription>
<para>Input stream extraction operator for <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>input a <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> object from an input stream by reading course registration information</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The input stream to read from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>courseReg</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> object to make with input values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The input stream (input) after reading the <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CourseRegistration.cpp" line="29" column="25" bodyfile="CourseRegistration.cpp" bodystart="47" bodyend="64"/>
      </memberdef>
      <memberdef kind="friend" id="class_course_registration_1a270f9386338b844ff616dd3df44baf78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;output, const CourseRegistration &amp;courseReg)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CourseRegistration::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> &amp;</type>
          <declname>courseReg</declname>
        </param>
        <briefdescription>
<para>Output stream insertion operator for <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>output a <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> object to an output stream by printing course registration information</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream to write to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>courseReg</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> object to output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output stream (output) after writing the <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CourseRegistration.cpp" line="30" column="12" bodyfile="CourseRegistration.cpp" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="friend" id="class_course_registration_1ae855faebf1c97a76db0a892fb7c5ff8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;input, CourseRegistration &amp;courseReg)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CourseRegistration::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> &amp;</type>
          <declname>courseReg</declname>
        </param>
        <briefdescription>
<para>Input stream extraction operator for <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>input a <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> object from an input stream by reading course registration information</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The input stream to read from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>courseReg</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> object to make with input values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The input stream (input) after reading the <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CourseRegistration.h" line="29" column="25" bodyfile="CourseRegistration.cpp" bodystart="47" bodyend="64"/>
      </memberdef>
      <memberdef kind="friend" id="class_course_registration_1a270f9386338b844ff616dd3df44baf78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;output, const CourseRegistration &amp;courseReg)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CourseRegistration::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> &amp;</type>
          <declname>courseReg</declname>
        </param>
        <briefdescription>
<para>Output stream insertion operator for <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>output a <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> object to an output stream by printing course registration information</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream to write to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>courseReg</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> object to output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output stream (output) after writing the <ref refid="class_course_registration" kindref="compound">CourseRegistration</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CourseRegistration.h" line="30" column="12" bodyfile="CourseRegistration.cpp" bodystart="76" bodyend="82"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class representing a course registration record. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a course registration record.</para>
<para><computeroutput><ref refid="class_course_registration" kindref="compound">CourseRegistration</ref></computeroutput> class stores information about a course registration including course identifier, student id, number of credit hours, and course grade</para>
<para>This class stores information about a course registration, including course identifier, student id, number of credit hours, and the course grade </para>
    </detaileddescription>
    <location file="CourseRegistration.cpp" line="11" column="1" bodyfile="CourseRegistration.cpp" bodystart="11" bodyend="31"/>
    <listofallmembers>
      <member refid="class_course_registration_1afc23eb1591c214bc15d8a6ebbabb663b" prot="public" virt="non-virtual"><scope>CourseRegistration</scope><name>courseGrade</name></member>
      <member refid="class_course_registration_1af69a665d7d1e3a896ec2986c8e288a66" prot="public" virt="non-virtual"><scope>CourseRegistration</scope><name>courseIdentifier</name></member>
      <member refid="class_course_registration_1ad02cda6ae6cba23ef881bed7241484b1" prot="public" virt="non-virtual"><scope>CourseRegistration</scope><name>CourseRegistration</name></member>
      <member refid="class_course_registration_1ad02cda6ae6cba23ef881bed7241484b1" prot="public" virt="non-virtual"><scope>CourseRegistration</scope><name>CourseRegistration</name></member>
      <member refid="class_course_registration_1acd29cb48054fc1035659af67a3a445b6" prot="public" virt="non-virtual"><scope>CourseRegistration</scope><name>numberOfCreditHours</name></member>
      <member refid="class_course_registration_1a270f9386338b844ff616dd3df44baf78" prot="public" virt="non-virtual"><scope>CourseRegistration</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_course_registration_1a270f9386338b844ff616dd3df44baf78" prot="public" virt="non-virtual"><scope>CourseRegistration</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_course_registration_1ae855faebf1c97a76db0a892fb7c5ff8f" prot="public" virt="non-virtual"><scope>CourseRegistration</scope><name>operator&gt;&gt;</name></member>
      <member refid="class_course_registration_1ae855faebf1c97a76db0a892fb7c5ff8f" prot="public" virt="non-virtual"><scope>CourseRegistration</scope><name>operator&gt;&gt;</name></member>
      <member refid="class_course_registration_1ab8455278c9cc0783893a3bce2a8fd655" prot="public" virt="non-virtual"><scope>CourseRegistration</scope><name>studentIdentifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
